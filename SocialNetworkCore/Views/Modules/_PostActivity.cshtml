@using CoreHelpers
@using SocialNetApp.Views.Models.Modules
@model PostActivityModel
<script type="text/javascript" src="@Url.Content("~/Scripts/_ActivityHeadTags.min.js")"></script>
@if (Model.IsActivityVisibleToUser)
{
    <div class="activity" id="@("activity_" + Model.Activity.Id)">
        @{Html.RenderPartial(Urls.ModuleViews + "_UserIdentity.cshtml", Model.ActorThumbIdentityModel);}
        <div class="act_tools">
            <div class="act_settings">
                @{Html.RenderPartial(Urls.ModuleViews + "_ActivitySettings.cshtml", Model.ActivitySettingsModel);}
            </div>
            <div class="act_info">
                @{Html.RenderPartial(Urls.ModuleViews + "_ActivityInfo.cshtml", Model.ActivityInfoModel);}
            </div>
        </div>
        <div class="act_content">
            @{Html.RenderPartial(Urls.ModuleViews + "_UserIdentity.cshtml", Model.ActorNameIdentityModel);}
            @if (!String.IsNullOrEmpty(Model.AssociatedPostOutputText))
            {
                <div class="act_post_text post_text">
                    @Html.Raw(Model.AssociatedPostOutputText)
                </div>
            }
            @if (Model.AssociatedPostPhotos.Any())
            {
                if (Model.AssociatedPostPhotos.Count == 1)
                {
                    var photo = Model.AssociatedPostPhotos.First();
                    <div class="act_post_photo">
                        <a class="post_img_large_a" href="@Url.Content(photo.UrlOfPostDetails)">
                            <img src="@Url.Content(photo.LargeThumbUrl)" alt="@Model.AssociatedPostOutputText" class="post_img_large" /></a>
                    </div>
                }
                else
                {
                    <div class="act_post_photos">
                        @foreach (var photo in Model.AssociatedPostPhotos)
                        {
                            <a class="post_img_small_a" href="@Url.Content(photo.UrlOfPostDetails)">
                                <img src="@Url.Content(photo.SmallThumbUrl)" alt="" class="post_img_small" />
                            </a>
                        }
                    </div>
                }
            }
            else if (Model.HasVideo)
            {
                <div class="act_post_video">
                    @{
                        Html.RenderPartial(Urls.ModuleViews + "_VideoPlayer.cshtml", Model.VideoPlayerModel);
                    }
                </div>
            }
            @if (Model.AssociatedPostTags.Any())
            {
                <div class="clear"></div>
                <div class="act_post_tags">
                    @foreach (var tag in Model.AssociatedPostTags)
                    {
                        <a href="@Url.Action("Public", "HomePage", new { @tag = tag.Tag })" class="tag">
                            <span>@tag.Tag</span>
                        </a>
                    }
                </div>
            }
        </div>
        <div class="clear">
        </div>
        <div class="actions">
            @{Html.RenderPartial(Urls.ModuleViews + "_SharedObjectActions.cshtml", Model.SharedObjectActionsModel);}
        </div>
    </div>
}